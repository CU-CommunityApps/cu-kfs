<?xml version="1.0" encoding="UTF-8"?>
<!--
    NOTE: Most of the XSD-based Accounting Document XML validation is very lenient
    because the code that processes these files already has built-in validation.
    (This also allows us to group most validation errors on a per-doc-entry basis.)
    Only a few basic parts of the XML structure are validated here; the rest
    of the validation will be deferred to our processing code.

    Also, no custom XML namespace has been defined because the corresponding
    JAXB POJOs have been configured to use an empty namespace.
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">

    <xsd:simpleType name="lenientAccountingXmlStringType">
        <xsd:restriction base="xsd:string">
            <xsd:minLength value="0"/>
            <xsd:maxLength value="500"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:element name="CreateDate" type="lenientAccountingXmlStringType"/>
    <xsd:element name="ReportEmail" type="lenientAccountingXmlStringType"/>
    <xsd:element name="Overview" type="lenientAccountingXmlStringType"/>

    <xsd:element name="DocumentWrapper">
        <xsd:complexType>
            <xsd:all>
                <xsd:element ref="CreateDate" minOccurs="1" maxOccurs="1"/>
                <xsd:element ref="ReportEmail" minOccurs="1" maxOccurs="1"/>
                <xsd:element ref="Overview" minOccurs="1" maxOccurs="1"/>
                <xsd:element ref="DocumentList" minOccurs="1" maxOccurs="1"/>
            </xsd:all>
        </xsd:complexType>
    </xsd:element>    

    <xsd:element name="DocumentList">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="Document" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element> 

    <xsd:element name="Document">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:any minOccurs="0" maxOccurs="unbounded" processContents="skip"/>
            </xsd:sequence>
            <xsd:anyAttribute processContents="skip"/>
        </xsd:complexType>
    </xsd:element> 

</xsd:schema>
